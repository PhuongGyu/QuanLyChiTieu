<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>